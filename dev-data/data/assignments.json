[
  {
    "_id": "5c8a4b1d0190b214360df101",
    "title": "Build a React Todo App",
    "body": "Create a CRUD todo application using React hooks and localStorage for persistence. Include unit tests with Jest.",
    "course": "5c8a23450190b214360dd101"
  },
  {
    "_id": "5c8a4b1d0190b214360df102",
    "title": "REST API with Node.js",
    "body": "Implement a RESTful API for a blog (posts/comments) using Express and MongoDB. Document endpoints with Swagger.",
    "course": "5c8a23450190b214360dd101"
  },

  {
    "_id": "5c8a4b1d0190b214360df103",
    "title": "ARM Assembly LED Blink",
    "body": "Write ARM assembly code to blink an LED on an STM32 board. Submit commented code and a demo video.",
    "course": "5c8a23450190b214360dd102"
  },
  {
    "_id": "5c8a4b1d0190b214360df104",
    "title": "FreeRTOS Multitasking",
    "body": "Create two tasks (LED toggle/UART logging) with priority scheduling. Analyze context switch timing.",
    "course": "5c8a23450190b214360dd102"
  },

  {
    "_id": "5c8a4b1d0190b214360df105",
    "title": "Agile User Stories",
    "body": "Write 10 user stories for a library management system. Prioritize them in a sprint backlog.",
    "course": "5c8a23450190b214360dd103"
  },
  {
    "_id": "5c8a4b1d0190b214360df106",
    "title": "Refactor Legacy Code",
    "body": "Apply SOLID principles to refactor a given Java class. Submit before/after code with explanations.",
    "course": "5c8a23450190b214360dd103"
  },

  {
    "_id": "5c8a4b1d0190b214360df107",
    "title": "SQL Query Optimization",
    "body": "Optimize 5 given slow SQL queries. Explain indexing strategies and execution plans.",
    "course": "5c8a23450190b214360dd104"
  },
  {
    "_id": "5c8a4b1d0190b214360df108",
    "title": "NoSQL Schema Design",
    "body": "Design a MongoDB schema for an e-commerce platform. Justify embedding vs. referencing.",
    "course": "5c8a23450190b214360dd104"
  },

  {
    "_id": "5c8a4b1d0190b214360df109",
    "title": "Serverless API with Lambda",
    "body": "Deploy a serverless API using AWS Lambda, API Gateway, and DynamoDB. Terraform infrastructure as code.",
    "course": "5c8a23450190b214360dd105"
  },
  {
    "_id": "5c8a4b1d0190b214360df110",
    "title": "S3 Disaster Recovery Plan",
    "body": "Design a cross-region replication strategy for critical S3 buckets with cost analysis.",
    "course": "5c8a23450190b214360dd105"
  },

  {
    "_id": "5c8a4b1d0190b214360df111",
    "title": "Password Cracking Demo",
    "body": "Use Hashcat to crack 5 password hashes. Write a mitigation report with bcrypt implementation.",
    "course": "5c8a23450190b214360dd106"
  },
  {
    "_id": "5c8a4b1d0190b214360df112",
    "title": "OWASP ZAP Scan",
    "body": "Run a ZAP scan on a vulnerable web app. Document 3 findings and remediation steps.",
    "course": "5c8a23450190b214360dd106"
  },

  {
    "_id": "5c8a4b1d0190b214360df113",
    "title": "Flutter Weather App",
    "body": "Build a weather app using the OpenWeatherMap API and Provider for state management.",
    "course": "5c8a23450190b214360dd107"
  },
  {
    "_id": "5c8a4b1d0190b214360df114",
    "title": "Firebase Auth Integration",
    "body": "Add Google Sign-In and email/password auth to a Flutter app. Handle error states gracefully.",
    "course": "5c8a23450190b214360dd107"
  }
]
